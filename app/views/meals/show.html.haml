%p#notice= notice

%p
  %b
    = t('.name') + ':'
  = @meal.name
%p
  %b
    = t('.description') + ':'
  = @meal.description
%p
  %b
    = t('.recipe') + ':'
  = @meal.recipe
%p
  %b
    = t('.public') + ':'
  = @meal.public
%p
  %b
    = t('.user') + ':'
  = User.find(@meal.user).email
  %br


%table
  %thead
  %tr
    %th
      = t('.name')
    %th
      = t('.amount')
    %th
      = t('.energy')
    %th
      = t('.fat')
    %th
      = t('.saturates')
    %th
      = t('.carbohydrates')
    %th
      = t('.sugar')
    %th
      = t('.fibre')
    %th
      = t('.protein')
    %th
      = t('.salt')
    %th
    %th
    %th

<!--Checks to see if there are any tuples in meal_ingredient table with the id of the shown meal-->
-if MealIngredient.find(MealIngredient.where(meal_id: @meal.id).ids).size != 0
  %table
    %tbody
      <!--Iterate through meal_ingredient table for the values related to the current meal-->
      - MealIngredient.find(MealIngredient.where(meal_id: @meal.id).ids).each do |mealingredient|
        %tr
          %td= mealingredient.ingredient.name
          %td= mealingredient.ingredient.amount
          %td= mealingredient.ingredient.energy
          %td= mealingredient.ingredient.fat
          %td= mealingredient.ingredient.saturates
          %td= mealingredient.ingredient.carbohydrates
          %td= mealingredient.ingredient.sugar
          %td= mealingredient.ingredient.fibre
          %td= mealingredient.ingredient.protein
          %td= mealingredient.ingredient.salt
          %td= link_to t('.show'), mealingredient.ingredient
          %td= link_to t('.edit'), edit_ingredient_path(mealingredient.ingredient)
          %td= link_to t('.destroy'), mealingredient, method: :delete, data: { confirm: t('.confirm') }
              
%p
  = link_to t('.add'), meal_ingredients_path

= link_to t('.edit'), edit_meal_path(@meal)
\|
= link_to t('.back'), meals_path
